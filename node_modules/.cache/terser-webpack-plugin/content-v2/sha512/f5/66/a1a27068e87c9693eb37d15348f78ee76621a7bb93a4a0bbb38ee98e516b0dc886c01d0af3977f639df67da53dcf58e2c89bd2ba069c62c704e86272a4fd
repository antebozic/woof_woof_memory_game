{"map":"{\"version\":3,\"sources\":[\"/Users/ante/Documents/projects/memory/src/NavBar.js\",\"/Users/ante/Documents/projects/memory/src/Card.js\",\"/Users/ante/Documents/projects/memory/src/Dog.js\",\"/Users/ante/Documents/projects/memory/src/MemoryGame.js\",\"/Users/ante/Documents/projects/memory/src/index.js\"],\"names\":[\"NavBar\",\"_ref\",\"onNewGame\",\"isFin\",\"attempts\",\"duration\",\"react_default\",\"a\",\"createElement\",\"className\",\"onClick\",\"id\",\"Card\",\"props\",\"style\",\"showing\",\"backgroundImage\",\"concat\",\"opacity\",\"filter\",\"border\",\"Dog\",\"CardState\",\"HIDDING\",\"SHOWING\",\"MATCHING\",\"MemoryGame\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"cards\",\"cardState\",\"HIDING\",\"backgroundColor\",\"shuffle\",\"state\",\"noClick\",\"isVis\",\"width\",\"timestart\",\"undefined\",\"click\",\"isMob\",\"handleClick\",\"bind\",\"assertThisInitialized\",\"handleNewGame\",\"getAllDogs\",\"updatedWindowDimensions\",\"mobileCheck\",\"window\",\"orientation\",\"setState\",\"innerWidth\",\"c\",\"length\",\"push\",\"arr\",\"i\",\"j\",\"temp\",\"Math\",\"floor\",\"random\",\"_this2\",\"dogs\",\"fetch\",\"then\",\"res\",\"json\",\"message\",\"setTimeout\",\"map\",\"objectSpread\",\"addEventListener\",\"_this3\",\"_this4\",\"prevState\",\"round\",\"Date\",\"getTime\",\"mapCardState\",\"idsToChange\",\"newCardState\",\"includes\",\"foundCard\",\"find\",\"showingCards\",\"ids\",\"hidingCards\",\"console\",\"log\",\"_this5\",\"classNames\",\"require\",\"loadClass\",\"hide\",\"show\",\"warClass\",\"hideWar\",\"showWar\",\"card\",\"src_Card_0\",\"key\",\"display\",\"src_NavBar_0\",\"src_Dog_0\",\"dist\",\"Component\",\"ReactDOM\",\"render\",\"MemoryGame_MemoryGame\",\"document\",\"getElementById\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\nimport './NavBar.css';\\n\\nconst NavBar = ({onNewGame, isFin, attempts, duration}) => {\\n   if(!isFin){\\n    return(\\n        <header>\\n            <h2><a>Woof Woof Memory Game</a></h2>\\n            <nav>\\n                <li><a onClick={onNewGame} className=\\\"btn\\\" id=\\\"slide\\\">New Game</a></li>\\n            </nav>\\n        </header>\\n       )\\n   }\\n   else {\\n    return(\\n        <header>\\n            <h2><a><span className=\\\"results2\\\">{attempts}</span> attempts in <span className=\\\"results2\\\">{duration}</span>s, Woof<span className=\\\"results1\\\">!</span></a></h2>\\n            <nav>\\n                <li><a onClick={onNewGame} className=\\\"btn\\\" id=\\\"slide\\\">New Game</a></li>\\n            </nav>\\n        </header>\\n        )\\n   }\\n   \\n   \\n   \\n};\\n\\n\\n\\nexport default NavBar;\",\"import React from 'react';\\nimport './Card.css'\\n\\nconst Card = (props) => {\\n    let style = {};\\n    if (props.showing) {\\n        style.backgroundImage = `url(${props.backgroundImage})`\\n    }\\n    if (props.opacity) {\\n        style.filter = 'grayscale(100%)'\\n        style.border = '.18rem solid #000'\\n        style.opacity = '.9'\\n    } \\n    return (\\n        <div \\n            onClick={props.onClick}\\n            className=\\\"card-container\\\" style={style} \\n        >\\n        </div>\\n    )\\n};\\n\\nexport default Card;\",\"import React from 'react';\\nimport './Dog.css';\\n\\nconst Dog = (props) => {\\n    return (\\n        <div className=\\\"bg\\\">\\n  <div id=\\\"dog\\\">\\n    <div className=\\\"head\\\">\\n      <div className=\\\"mask mask-head\\\">\\n         <div className=\\\"nose\\\"></div>\\n        <div className=\\\"eye\\\"></div>\\n      </div>\\n     <div className=\\\"ear\\\"></div>\\n    </div>\\n      \\n    <div className=\\\"body\\\">\\n      <div className=\\\"shirt\\\"></div>\\n      <div className=\\\"mask-body\\\">\\n        <div className=\\\"leg\\\"></div>\\n      </div>\\n      <div className=\\\"foot\\\"></div>\\n    </div>\\n    <div className=\\\"back-body\\\">\\n      <div className=\\\"mask-back-body\\\"></div>\\n    </div>\\n    <div className=\\\"mask-tail\\\"></div>\\n    </div>\\n\\n<div className=\\\"spinner\\\">\\n  <div className=\\\"bounce1\\\"></div>\\n  <div className=\\\"bounce2\\\"></div>\\n  <div className=\\\"bounce3\\\"></div>\\n</div>\\n\\n  </div>\\n\\n    )\\n}\\n\\nexport default Dog;\",\"import React, { Component } from 'react';\\nimport NavBar from './NavBar';\\nimport Card from './Card';\\nimport Dog from './Dog';\\nimport './MemoryGame.css';\\n\\nimport { Offline, Online } from 'react-detect-offline';\\n\\nconst CardState = {\\n\\tHIDDING: 0,\\n\\tSHOWING: 1,\\n\\tMATCHING: 2\\n};\\n\\nexport default class MemoryGame extends Component {\\n\\tconstructor(props) {\\n\\t\\tsuper(props);\\n\\n\\t\\t//the cards I'm using for my state\\n\\t\\tlet cards = [\\n\\t\\t\\t{ id: 0, cardState: CardState.HIDING, backgroundColor: 'red', backgroundImage: '' },\\n\\t\\t\\t{ id: 1, cardState: CardState.HIDING, backgroundColor: 'red', backgroundImage: '' },\\n\\t\\t\\t{ id: 2, cardState: CardState.HIDING, backgroundColor: 'navy', backgroundImage: '' },\\n\\t\\t\\t{ id: 3, cardState: CardState.HIDING, backgroundColor: 'navy', backgroundImage: '' },\\n\\t\\t\\t{ id: 4, cardState: CardState.HIDING, backgroundColor: 'yellow', backgroundImage: '' },\\n\\t\\t\\t{ id: 5, cardState: CardState.HIDING, backgroundColor: 'yellow', backgroundImage: '' },\\n\\t\\t\\t{ id: 6, cardState: CardState.HIDING, backgroundColor: 'green', backgroundImage: '' },\\n\\t\\t\\t{ id: 7, cardState: CardState.HIDING, backgroundColor: 'green', backgroundImage: '' },\\n\\t\\t\\t{ id: 8, cardState: CardState.HIDING, backgroundColor: 'black', backgroundImage: '' },\\n\\t\\t\\t{ id: 9, cardState: CardState.HIDING, backgroundColor: 'black', backgroundImage: '' },\\n\\t\\t\\t{ id: 10, cardState: CardState.HIDING, backgroundColor: 'purple', backgroundImage: '' },\\n\\t\\t\\t{ id: 11, cardState: CardState.HIDING, backgroundColor: 'purple', backgroundImage: '' },\\n\\t\\t\\t{ id: 12, cardState: CardState.HIDING, backgroundColor: 'pink', backgroundImage: '' },\\n\\t\\t\\t{ id: 13, cardState: CardState.HIDING, backgroundColor: 'pink', backgroundImage: '' },\\n\\t\\t\\t{ id: 14, cardState: CardState.HIDING, backgroundColor: 'lightsky', backgroundImage: '' },\\n\\t\\t\\t{ id: 15, cardState: CardState.HIDING, backgroundColor: 'lightsky', backgroundImage: '' },\\n\\t\\t\\t{ id: 16, cardState: CardState.HIDING, backgroundColor: 'brown', backgroundImage: '' },\\n\\t\\t\\t{ id: 17, cardState: CardState.HIDING, backgroundColor: 'brown', backgroundImage: '' },\\n\\t\\t\\t{ id: 18, cardState: CardState.HIDING, backgroundColor: 'white', backgroundImage: '' },\\n\\t\\t\\t{ id: 19, cardState: CardState.HIDING, backgroundColor: 'white', backgroundImage: '' }\\n\\t\\t];\\n\\n\\t\\tcards = this.shuffle(cards);\\n\\n\\t\\tthis.state = {\\n\\t\\t\\tcards,\\n\\t\\t\\tnoClick: false,\\n\\t\\t\\tisVis: true,\\n\\t\\t\\tisFin: false,\\n\\t\\t\\twidth: 0,\\n\\t\\t\\ttimestart: undefined,\\n\\t\\t\\tattempts: undefined,\\n\\t\\t\\tduration: undefined,\\n\\t\\t\\tclick: 0,\\n\\t\\t\\tisMob: false\\n\\t\\t};\\n\\n\\t\\tthis.handleClick = this.handleClick.bind(this);\\n\\t\\tthis.handleNewGame = this.handleNewGame.bind(this);\\n\\t\\tthis.getAllDogs = this.getAllDogs.bind(this);\\n\\t\\tthis.shuffle = this.shuffle.bind(this);\\n\\t\\tthis.updatedWindowDimensions = this.updatedWindowDimensions.bind(this);\\n\\t\\tthis.mobileCheck = this.mobileCheck.bind(this);\\n\\t}\\n\\n\\tmobileCheck() {\\n\\t\\tif (typeof window.orientation !== 'undefined') {\\n\\t\\t\\tthis.setState({\\n\\t\\t\\t\\tisMob: true\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\n\\tupdatedWindowDimensions() {\\n\\t\\tif (window.innerWidth < 520) {\\n\\t\\t\\tlet cards = this.state.cards.filter((c) => c.backgroundColor !== 'white');\\n\\t\\t\\tthis.setState({\\n\\t\\t\\t\\tcards,\\n\\t\\t\\t\\twidth: window.innerWidth\\n\\t\\t\\t});\\n\\t\\t} else if (window.innerWidth > 520 && this.state.cards.length !== 20) {\\n\\t\\t\\tlet cards = this.state.cards;\\n\\t\\t\\tcards.push(\\n\\t\\t\\t\\t{ id: 18, cardState: CardState.HIDING, backgroundColor: 'white', backgroundImage: '' },\\n\\t\\t\\t\\t{ id: 19, cardState: CardState.HIDING, backgroundColor: 'white', backgroundImage: '' }\\n\\t\\t\\t);\\n\\t\\t\\tthis.setState({ cards, width: window.innerWidth });\\n\\t\\t}\\n\\t}\\n\\n\\tshuffle(arr) {\\n\\t\\tvar i, j, temp;\\n\\t\\tfor (i = arr.length - 1; i > 0; i--) {\\n\\t\\t\\tj = Math.floor(Math.random() * (i + 1));\\n\\t\\t\\ttemp = arr[i];\\n\\t\\t\\tarr[i] = arr[j];\\n\\t\\t\\tarr[j] = temp;\\n\\t\\t}\\n\\t\\treturn arr;\\n\\t}\\n\\n\\tgetAllDogs() {\\n\\t\\tlet dogs = [];\\n\\t\\tfor (let i = 0; i < 10; i++) {\\n\\t\\t\\tfetch('https://dog.ceo/api/breeds/image/random')\\n\\t\\t\\t\\t.then((res) => res.json())\\n\\t\\t\\t\\t.then((res) => dogs.push(res.message));\\n\\t\\t}\\n\\n\\t\\tsetTimeout(() => {\\n\\t\\t\\tlet cards = this.state.cards.map((c) => {\\n\\t\\t\\t\\tswitch (c.backgroundColor) {\\n\\t\\t\\t\\t\\tcase 'red':\\n\\t\\t\\t\\t\\t\\treturn { ...c, backgroundImage: dogs[0] };\\n\\n\\t\\t\\t\\t\\tcase 'navy':\\n\\t\\t\\t\\t\\t\\treturn { ...c, backgroundImage: dogs[1] };\\n\\n\\t\\t\\t\\t\\tcase 'yellow':\\n\\t\\t\\t\\t\\t\\treturn { ...c, backgroundImage: dogs[2] };\\n\\n\\t\\t\\t\\t\\tcase 'green':\\n\\t\\t\\t\\t\\t\\treturn { ...c, backgroundImage: dogs[3] };\\n\\n\\t\\t\\t\\t\\tcase 'black':\\n\\t\\t\\t\\t\\t\\treturn { ...c, backgroundImage: dogs[4] };\\n\\n\\t\\t\\t\\t\\tcase 'purple':\\n\\t\\t\\t\\t\\t\\treturn { ...c, backgroundImage: dogs[5] };\\n\\n\\t\\t\\t\\t\\tcase 'pink':\\n\\t\\t\\t\\t\\t\\treturn { ...c, backgroundImage: dogs[6] };\\n\\n\\t\\t\\t\\t\\tcase 'lightsky':\\n\\t\\t\\t\\t\\t\\treturn { ...c, backgroundImage: dogs[7] };\\n\\n\\t\\t\\t\\t\\tcase 'brown':\\n\\t\\t\\t\\t\\t\\treturn { ...c, backgroundImage: dogs[8] };\\n\\n\\t\\t\\t\\t\\tcase 'white':\\n\\t\\t\\t\\t\\t\\treturn { ...c, backgroundImage: dogs[9] };\\n\\n\\t\\t\\t\\t\\tdefault:\\n\\t\\t\\t\\t\\t\\treturn c;\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t\\tthis.setState({ cards, isVis: false });\\n\\t\\t}, 3000);\\n\\t}\\n\\n\\tcomponentDidMount() {\\n\\t\\tthis.mobileCheck();\\n\\t\\tthis.getAllDogs();\\n\\t\\tthis.updatedWindowDimensions();\\n\\t\\twindow.addEventListener('resize', this.updatedWindowDimensions);\\n\\t}\\n\\n\\thandleNewGame() {\\n\\t\\t// 1.copy all state and set all cards to state of hiding\\n\\t\\t// 2.shuffle the cards\\n\\t\\tthis.setState({ isVis: true });\\n\\t\\tsetTimeout(() => {\\n\\t\\t\\tthis.setState({ isVis: false });\\n\\t\\t}, 3000);\\n\\t\\tlet cards = this.state.cards.map((c) => ({\\n\\t\\t\\t...c,\\n\\t\\t\\tcardState: CardState.HIDING\\n\\t\\t}));\\n\\n\\t\\tcards = this.shuffle(cards);\\n\\n\\t\\tthis.setState({\\n\\t\\t\\tcards,\\n\\t\\t\\ttimestart: undefined,\\n\\t\\t\\tisFin: false,\\n\\t\\t\\tduration: undefined,\\n\\t\\t\\tattempts: undefined,\\n\\t\\t\\tclick: 0\\n\\t\\t});\\n\\n\\t\\tthis.getAllDogs();\\n\\t}\\n\\n\\thandleClick(id) {\\n\\t\\t// console.log(Math.round(new Date().getTime()/1000))\\n\\t\\t//adding click\\n\\t\\tthis.setState((prevState, props) => {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tclick: prevState.click + 1\\n\\t\\t\\t};\\n\\t\\t});\\n\\t\\t//adding first clikc timestamp\\n\\t\\tif (this.state.click === 1) {\\n\\t\\t\\tthis.setState({\\n\\t\\t\\t\\ttimestart: Math.round(new Date().getTime() / 1000)\\n\\t\\t\\t});\\n\\t\\t}\\n\\t\\t// 1.if two cards are visible and they don't match, put back\\n\\t\\t// 2.if two cards are visible and they match, they should stay\\n\\n\\t\\tconst mapCardState = (cards, idsToChange, newCardState) => {\\n\\t\\t\\treturn cards.map((c) => {\\n\\t\\t\\t\\tif (idsToChange.includes(c.id)) {\\n\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t...c,\\n\\t\\t\\t\\t\\t\\tcardState: newCardState\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn c;\\n\\t\\t\\t});\\n\\t\\t};\\n\\t\\t//grabbing the card we want out of the array\\n\\n\\t\\tconst foundCard = this.state.cards.find((c) => c.id === id);\\n\\n\\t\\t//prevents flipping card if it's noClick || matching || showing\\n\\t\\tif (this.state.noClick || foundCard.cardState !== CardState.HIDING) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tlet noClick = false;\\n\\n\\t\\t//filters all cards, but one that's clicke has SHOWING now\\n\\t\\tlet cards = mapCardState(this.state.cards, [ id ], CardState.SHOWING);\\n\\n\\t\\t//finds only cards with SHOWING\\n\\t\\tconst showingCards = cards.filter((c) => c.cardState === CardState.SHOWING);\\n\\n\\t\\t//grabbing ids from showingCards\\n\\t\\tconst ids = showingCards.map((c) => c.id);\\n\\n\\t\\tif (showingCards.length === 2 && showingCards[0].backgroundColor === showingCards[1].backgroundColor) {\\n\\t\\t\\tcards = mapCardState(this.state.cards, ids, CardState.MATCHING);\\n\\t\\t} else if (showingCards.length === 2) {\\n\\t\\t\\tlet hidingCards = mapCardState(this.state.cards, ids, CardState.HIDING);\\n\\n\\t\\t\\tnoClick = true;\\n\\n\\t\\t\\tthis.setState({ cards, noClick }, () => {\\n\\t\\t\\t\\tsetTimeout(() => {\\n\\t\\t\\t\\t\\t// set the state of the cards to HIDING after 1.5 seconds\\n\\t\\t\\t\\t\\tthis.setState({ cards: hidingCards, noClick: false });\\n\\t\\t\\t\\t}, 1200);\\n\\t\\t\\t});\\n\\t\\t}\\n\\t\\t//check for the game end\\n\\t\\tlet allMatching = cards.filter((c) => c.cardState === CardState.MATCHING);\\n\\t\\tif (allMatching.length === cards.length) {\\n\\t\\t\\tlet duration = Math.round(new Date().getTime() / 1000) - this.state.timestart;\\n\\t\\t\\tlet attempts = Math.round(this.state.click / 2);\\n\\t\\t\\tthis.setState(\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tduration,\\n\\t\\t\\t\\t\\tattempts,\\n\\t\\t\\t\\t\\tisFin: true\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t() => {\\n\\t\\t\\t\\t\\tconsole.log(this.state.duration);\\n\\t\\t\\t\\t\\tconsole.log(this.state.attempts);\\n\\t\\t\\t\\t}\\n\\t\\t\\t);\\n\\t\\t}\\n\\t\\tthis.setState({ cards, noClick });\\n\\t}\\n\\n\\trender() {\\n\\t\\tvar classNames = require('classnames');\\n\\t\\tvar loadClass = classNames('load', {\\n\\t\\t\\thide: !this.state.isVis,\\n\\t\\t\\tshow: this.state.isVis\\n\\t\\t});\\n\\t\\tvar warClass = classNames({\\n\\t\\t\\thideWar: !this.state.isMob,\\n\\t\\t\\tshowWar: this.state.isMob\\n\\t\\t});\\n\\n\\t\\tconst cards = this.state.cards.map((card) => (\\n\\t\\t\\t<Card\\n\\t\\t\\t\\tkey={card.id}\\n\\t\\t\\t\\topacity={card.cardState === CardState.MATCHING}\\n\\t\\t\\t\\tshowing={card.cardState !== CardState.HIDING}\\n\\t\\t\\t\\tbackgroundColor={card.backgroundColor}\\n\\t\\t\\t\\tbackgroundImage={card.backgroundImage}\\n\\t\\t\\t\\tonClick={() => this.handleClick(card.id)}\\n\\t\\t\\t/>\\n\\t\\t));\\n\\n\\t\\tlet style = {};\\n\\t\\tif (!this.state.isVis) {\\n\\t\\t\\tstyle.display = 'grid';\\n\\t\\t} else if (this.state.isVis) {\\n\\t\\t\\tstyle.display = 'none';\\n\\t\\t}\\n\\n\\t\\treturn (\\n\\t\\t\\t<div className=\\\"container\\\">\\n\\t\\t\\t\\t<NavBar\\n\\t\\t\\t\\t\\tonNewGame={this.handleNewGame}\\n\\t\\t\\t\\t\\tisFin={this.state.isFin}\\n\\t\\t\\t\\t\\tduration={this.state.duration}\\n\\t\\t\\t\\t\\tattempts={this.state.attempts}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t\\t<div className=\\\"content\\\">\\n\\t\\t\\t\\t\\t<div className=\\\"cardsContainer\\\" style={style}>\\n\\t\\t\\t\\t\\t\\t{cards}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div className={loadClass}>\\n\\t\\t\\t\\t\\t<Dog />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div className={warClass}>\\n\\t\\t\\t\\t\\t<h2>\\n\\t\\t\\t\\t\\t\\tTurn device in portrait mode<span className=\\\"exc\\\">!</span> Woof<span className=\\\"exc\\\">!</span>\\n\\t\\t\\t\\t\\t</h2>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<Offline>\\n\\t\\t\\t\\t\\t<div className=\\\"showConn\\\">\\n\\t\\t\\t\\t\\t\\t<h2>\\n\\t\\t\\t\\t\\t\\t\\tThere is a problem with your internet connection<span className=\\\"exc\\\">!</span> Woof<span className=\\\"exc\\\">!</span>\\n\\t\\t\\t\\t\\t\\t</h2>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</Offline>\\n\\t\\t\\t</div>\\n\\t\\t);\\n\\t}\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport MemoryGame from './MemoryGame';\\n\\n\\nReactDOM.render(<MemoryGame />,\\n     document.getElementById('root')\\n);\\n\\n\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{11:function(e,a,t){e.exports=t(30)},16:function(e,a,t){},18:function(e,a,t){},20:function(e,a,t){},22:function(e,a,t){},24:function(e,a,t){},30:function(e,a,t){\"use strict\";t.r(a);var n=t(0),r=t.n(n),c=t(4),i=t.n(c),s=(t(16),t(2)),o=t(5),d=t(6),l=t(9),u=t(7),m=t(10),g=t(1),b=(t(18),function(e){var a=e.onNewGame,t=e.isFin,n=e.attempts,c=e.duration;return t?r.a.createElement(\"header\",null,r.a.createElement(\"h2\",null,r.a.createElement(\"a\",null,r.a.createElement(\"span\",{className:\"results2\"},n),\" attempts in \",r.a.createElement(\"span\",{className:\"results2\"},c),\"s, Woof\",r.a.createElement(\"span\",{className:\"results1\"},\"!\"))),r.a.createElement(\"nav\",null,r.a.createElement(\"li\",null,r.a.createElement(\"a\",{onClick:a,className:\"btn\",id:\"slide\"},\"New Game\")))):r.a.createElement(\"header\",null,r.a.createElement(\"h2\",null,r.a.createElement(\"a\",null,\"Woof Woof Memory Game\")),r.a.createElement(\"nav\",null,r.a.createElement(\"li\",null,r.a.createElement(\"a\",{onClick:a,className:\"btn\",id:\"slide\"},\"New Game\"))))}),h=(t(20),function(e){var a={};return e.showing&&(a.backgroundImage=\"url(\".concat(e.backgroundImage,\")\")),e.opacity&&(a.filter=\"grayscale(100%)\",a.border=\".18rem solid #000\",a.opacity=\".9\"),r.a.createElement(\"div\",{onClick:e.onClick,className:\"card-container\",style:a})}),k=(t(22),function(e){return r.a.createElement(\"div\",{className:\"bg\"},r.a.createElement(\"div\",{id:\"dog\"},r.a.createElement(\"div\",{className:\"head\"},r.a.createElement(\"div\",{className:\"mask mask-head\"},r.a.createElement(\"div\",{className:\"nose\"}),r.a.createElement(\"div\",{className:\"eye\"})),r.a.createElement(\"div\",{className:\"ear\"})),r.a.createElement(\"div\",{className:\"body\"},r.a.createElement(\"div\",{className:\"shirt\"}),r.a.createElement(\"div\",{className:\"mask-body\"},r.a.createElement(\"div\",{className:\"leg\"})),r.a.createElement(\"div\",{className:\"foot\"})),r.a.createElement(\"div\",{className:\"back-body\"},r.a.createElement(\"div\",{className:\"mask-back-body\"})),r.a.createElement(\"div\",{className:\"mask-tail\"})),r.a.createElement(\"div\",{className:\"spinner\"},r.a.createElement(\"div\",{className:\"bounce1\"}),r.a.createElement(\"div\",{className:\"bounce2\"}),r.a.createElement(\"div\",{className:\"bounce3\"})))}),I=(t(24),t(8)),N={HIDDING:0,SHOWING:1,MATCHING:2},f=function(e){function a(e){var t;Object(o.a)(this,a),t=Object(l.a)(this,Object(u.a)(a).call(this,e));var n=[{id:0,cardState:N.HIDING,backgroundColor:\"red\",backgroundImage:\"\"},{id:1,cardState:N.HIDING,backgroundColor:\"red\",backgroundImage:\"\"},{id:2,cardState:N.HIDING,backgroundColor:\"navy\",backgroundImage:\"\"},{id:3,cardState:N.HIDING,backgroundColor:\"navy\",backgroundImage:\"\"},{id:4,cardState:N.HIDING,backgroundColor:\"yellow\",backgroundImage:\"\"},{id:5,cardState:N.HIDING,backgroundColor:\"yellow\",backgroundImage:\"\"},{id:6,cardState:N.HIDING,backgroundColor:\"green\",backgroundImage:\"\"},{id:7,cardState:N.HIDING,backgroundColor:\"green\",backgroundImage:\"\"},{id:8,cardState:N.HIDING,backgroundColor:\"black\",backgroundImage:\"\"},{id:9,cardState:N.HIDING,backgroundColor:\"black\",backgroundImage:\"\"},{id:10,cardState:N.HIDING,backgroundColor:\"purple\",backgroundImage:\"\"},{id:11,cardState:N.HIDING,backgroundColor:\"purple\",backgroundImage:\"\"},{id:12,cardState:N.HIDING,backgroundColor:\"pink\",backgroundImage:\"\"},{id:13,cardState:N.HIDING,backgroundColor:\"pink\",backgroundImage:\"\"},{id:14,cardState:N.HIDING,backgroundColor:\"lightsky\",backgroundImage:\"\"},{id:15,cardState:N.HIDING,backgroundColor:\"lightsky\",backgroundImage:\"\"},{id:16,cardState:N.HIDING,backgroundColor:\"brown\",backgroundImage:\"\"},{id:17,cardState:N.HIDING,backgroundColor:\"brown\",backgroundImage:\"\"},{id:18,cardState:N.HIDING,backgroundColor:\"white\",backgroundImage:\"\"},{id:19,cardState:N.HIDING,backgroundColor:\"white\",backgroundImage:\"\"}];return n=t.shuffle(n),t.state={cards:n,noClick:!1,isVis:!0,isFin:!1,width:0,timestart:void 0,attempts:void 0,duration:void 0,click:0,isMob:!1},t.handleClick=t.handleClick.bind(Object(g.a)(Object(g.a)(t))),t.handleNewGame=t.handleNewGame.bind(Object(g.a)(Object(g.a)(t))),t.getAllDogs=t.getAllDogs.bind(Object(g.a)(Object(g.a)(t))),t.shuffle=t.shuffle.bind(Object(g.a)(Object(g.a)(t))),t.updatedWindowDimensions=t.updatedWindowDimensions.bind(Object(g.a)(Object(g.a)(t))),t.mobileCheck=t.mobileCheck.bind(Object(g.a)(Object(g.a)(t))),t}return Object(m.a)(a,e),Object(d.a)(a,[{key:\"mobileCheck\",value:function(){\"undefined\"!==typeof window.orientation&&this.setState({isMob:!0})}},{key:\"updatedWindowDimensions\",value:function(){if(window.innerWidth<520){var e=this.state.cards.filter(function(e){return\"white\"!==e.backgroundColor});this.setState({cards:e,width:window.innerWidth})}else if(window.innerWidth>520&&20!==this.state.cards.length){var a=this.state.cards;a.push({id:18,cardState:N.HIDING,backgroundColor:\"white\",backgroundImage:\"\"},{id:19,cardState:N.HIDING,backgroundColor:\"white\",backgroundImage:\"\"}),this.setState({cards:a,width:window.innerWidth})}}},{key:\"shuffle\",value:function(e){var a,t,n;for(a=e.length-1;a>0;a--)t=Math.floor(Math.random()*(a+1)),n=e[a],e[a]=e[t],e[t]=n;return e}},{key:\"getAllDogs\",value:function(){for(var e=this,a=[],t=0;t<10;t++)fetch(\"https://dog.ceo/api/breeds/image/random\").then(function(e){return e.json()}).then(function(e){return a.push(e.message)});setTimeout(function(){var t=e.state.cards.map(function(e){switch(e.backgroundColor){case\"red\":return Object(s.a)({},e,{backgroundImage:a[0]});case\"navy\":return Object(s.a)({},e,{backgroundImage:a[1]});case\"yellow\":return Object(s.a)({},e,{backgroundImage:a[2]});case\"green\":return Object(s.a)({},e,{backgroundImage:a[3]});case\"black\":return Object(s.a)({},e,{backgroundImage:a[4]});case\"purple\":return Object(s.a)({},e,{backgroundImage:a[5]});case\"pink\":return Object(s.a)({},e,{backgroundImage:a[6]});case\"lightsky\":return Object(s.a)({},e,{backgroundImage:a[7]});case\"brown\":return Object(s.a)({},e,{backgroundImage:a[8]});case\"white\":return Object(s.a)({},e,{backgroundImage:a[9]});default:return e}});e.setState({cards:t,isVis:!1})},3e3)}},{key:\"componentDidMount\",value:function(){this.mobileCheck(),this.getAllDogs(),this.updatedWindowDimensions(),window.addEventListener(\"resize\",this.updatedWindowDimensions)}},{key:\"handleNewGame\",value:function(){var e=this;this.setState({isVis:!0}),setTimeout(function(){e.setState({isVis:!1})},3e3);var a=this.state.cards.map(function(e){return Object(s.a)({},e,{cardState:N.HIDING})});a=this.shuffle(a),this.setState({cards:a,timestart:void 0,isFin:!1,duration:void 0,attempts:void 0,click:0}),this.getAllDogs()}},{key:\"handleClick\",value:function(e){var a=this;this.setState(function(e,a){return{click:e.click+1}}),1===this.state.click&&this.setState({timestart:Math.round((new Date).getTime()/1e3)});var t=function(e,a,t){return e.map(function(e){return a.includes(e.id)?Object(s.a)({},e,{cardState:t}):e})},n=this.state.cards.find(function(a){return a.id===e});if(!this.state.noClick&&n.cardState===N.HIDING){var r=!1,c=t(this.state.cards,[e],N.SHOWING),i=c.filter(function(e){return e.cardState===N.SHOWING}),o=i.map(function(e){return e.id});if(2===i.length&&i[0].backgroundColor===i[1].backgroundColor)c=t(this.state.cards,o,N.MATCHING);else if(2===i.length){var d=t(this.state.cards,o,N.HIDING);r=!0,this.setState({cards:c,noClick:r},function(){setTimeout(function(){a.setState({cards:d,noClick:!1})},1200)})}if(c.filter(function(e){return e.cardState===N.MATCHING}).length===c.length){var l=Math.round((new Date).getTime()/1e3)-this.state.timestart,u=Math.round(this.state.click/2);this.setState({duration:l,attempts:u,isFin:!0},function(){console.log(a.state.duration),console.log(a.state.attempts)})}this.setState({cards:c,noClick:r})}}},{key:\"render\",value:function(){var e=this,a=t(29),n=a(\"load\",{hide:!this.state.isVis,show:this.state.isVis}),c=a({hideWar:!this.state.isMob,showWar:this.state.isMob}),i=this.state.cards.map(function(a){return r.a.createElement(h,{key:a.id,opacity:a.cardState===N.MATCHING,showing:a.cardState!==N.HIDING,backgroundColor:a.backgroundColor,backgroundImage:a.backgroundImage,onClick:function(){return e.handleClick(a.id)}})}),s={};return this.state.isVis?this.state.isVis&&(s.display=\"none\"):s.display=\"grid\",r.a.createElement(\"div\",{className:\"container\"},r.a.createElement(b,{onNewGame:this.handleNewGame,isFin:this.state.isFin,duration:this.state.duration,attempts:this.state.attempts}),r.a.createElement(\"div\",{className:\"content\"},r.a.createElement(\"div\",{className:\"cardsContainer\",style:s},i)),r.a.createElement(\"div\",{className:n},r.a.createElement(k,null)),r.a.createElement(\"div\",{className:c},r.a.createElement(\"h2\",null,\"Turn device in portrait mode\",r.a.createElement(\"span\",{className:\"exc\"},\"!\"),\" Woof\",r.a.createElement(\"span\",{className:\"exc\"},\"!\"))),r.a.createElement(I.Offline,null,r.a.createElement(\"div\",{className:\"showConn\"},r.a.createElement(\"h2\",null,\"There is a problem with your internet connection\",r.a.createElement(\"span\",{className:\"exc\"},\"!\"),\" Woof\",r.a.createElement(\"span\",{className:\"exc\"},\"!\")))))}}]),a}(n.Component);i.a.render(r.a.createElement(f,null),document.getElementById(\"root\"))}},[[11,2,1]]]);","extractedComments":[]}